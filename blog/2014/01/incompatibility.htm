<p class="main">
	I'm now a web developer. As you can probably already tell. Not the master of the field, but that's probably 
	because at the moment, server scripting is the language of the devil to me at the moment. I'll stick with 
	websites instead of databases, thank you very much. While I'm here, I'll talk about incompatibility.
</p>
<p class="main">
	When I'm making a thing, be it a website or a random bit of code I find in my Recycle Bin two seconds later, 
	I'm always targeting an audience. At the moment, I'm in high school, and most of the computers are either 
	brand spanking new Macs in the IT lab, or old Windows XPs with IE7 strewn across the rest of the school. 
	Same goes for the teacher's laptops - they are all XPs with no upgrades. The IT teacher has to use 
	Internet Explorer, or as I affectionately call it, Internet <em>Exploder</em>, to view a lot of our website work.
</p>
<p class="main">
	Obviously most of the time this isn't a problem, as she's the IT teacher and she can do what she wants when it 
	comes to teaching websites. It would be ideal if she could show off the things on her laptop properly. But I'm 
	teaching myself, and immersing myself in new web standards *cough* HTML5 *cough*. And when archaic, bug ridden 
	software is used to teach deprecated and flawed techniques *cough* Internet Exploder *<em>wheeze</em>*, it's 
	started to make me die a little inside.
</p>
<p class="main">
	I mean, why should I have to make software for stuff in the <strong>past</strong>? The future is <em>now</em> and 
	if the Internet Exploders and late adopters of the world want in on it, they are going to have to pay the price. 
	I have to write <em>special code</em> for my website, because without it, older browsers will simply show a grey wash 
	with poorly aligned black text which looks like poop for a website.
</p>
<p class="main">
	Then again, I'm one of those free software movement guys who won't stop until they start teaching bash console in Year 8. 
	There are legitimate reasons for not adopting today's software. It's just that yesterday's software is a sweet, fresh 
	turd that all software developers have to clean up every once in a while.
</p>